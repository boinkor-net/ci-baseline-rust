# This workflow contains end-to-end tests that ensure the workflows
# defined here succeed and fail under the correct circumstances.
#
# Please don't use this as a reusable workflow, because it is very
# much not.

name: "End-to-end tests for this repo"
on:
  workflow_call:

jobs:
  success_tests:
    strategy:
      fail-fast: false
      matrix:
        rust_toolchain: ["stable", "nightly"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          manifest_dir: "tests/success"
          rust_toolchain: ${{ matrix.rust_toolchain }}

  success_lints:
    strategy:
      fail-fast: false
      matrix:
        rust_toolchain: ["stable", "nightly"]
    uses: "./.github/workflows/ci_baseline_rust_lints.yml"
    secrets: inherit
    with:
      manifest_dir: "tests/success"
      rust_toolchain: ${{ matrix.rust_toolchain }}

  success_tests_c_dep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          manifest_dir: "tests/success-with-c-dependency"
          apt_install_packages: libzfslinux-dev

  success_lints_c_dep:
    uses: "./.github/workflows/ci_baseline_rust_lints.yml"
    secrets: inherit
    with:
      manifest_dir: "tests/success-with-c-dependency"
      apt_install_packages: libzfslinux-dev

  # Test jobs that expect failure:
  failure_lint_clippy:
    uses: "./.github/workflows/_internal_expected_lint_failure.yml"
    with:
      expected_failure: clippy
      manifest_dir: "tests/clippy-failure"

  failure_lint_fmt:
    uses: "./.github/workflows/_internal_expected_lint_failure.yml"
    with:
      expected_failure: fmt
      manifest_dir: "tests/fmt-failure"

  failure_test_nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          manifest_dir: tests/failure
          rust_toolchain: nightly
        id: failure
        continue-on-error: true
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}

  failure_test_stable:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          manifest_dir: tests/failure
          rust_toolchain: stable
        id: failure
        continue-on-error: true
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}
