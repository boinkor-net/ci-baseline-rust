name: "Code coverage"
on:
  workflow_call:
    inputs:
      cargo_test_args:
        description: "Commandline passed to `cargo test`"
        type: string
    secrets:
      codecov_token:
        description: "Identification token for the upload to codecov.io"

jobs:
  code_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: llvm-tools-preview
      - uses: taiki-e/install-action@v2
        with:
          tool: grcov
      - name: Run tests
        run: cargo test ${{inputs.cargo_test_args}}
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-C instrument-coverage"
          RUSTDOCFLAGS: "-Cpanic=abort -Cinstrument-coverage -Zunstable-options --persist-doctests ${{github.workspace}}/target/debug/doctestbins"
          LLVM_PROFILE_FILE: "profile-%p-%m.profraw"

      - name: Run grcov to merge coverage data
        run: |
          mkdir coverage
          grcov . --binary-path target/debug/deps/ -s . -t lcov --excl-line '!no_rcov!' --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o coverage/tests.lcov
          grcov . --binary-path target/debug/doctestbins/ -s . -t lcov --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o coverage/doctests.lcov

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.codecov_token }}
          files: coverage/*.lcov

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            coverage/*.lcov
